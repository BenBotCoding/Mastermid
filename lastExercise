
/**
 * Write a description of class Simon here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
import java.util.Scanner;
public class Mastermind
{

    public static void main (String[] args)
    {
        boolean gameOver = false;
        int guessesLeft = 12;
        char[] goalCode = new char[4];
        String[] generatedFeedback = new String[4];
        instructions();
        goalCode = generateCode();
        //printCharArray(goalCode);
        while (gameOver == false){
            System.out.println("");
            System.out.println ("You have " + guessesLeft + " guesses left.");
            String userInput = readInput("Please enter your guess. Valid colours ROYGBP");
            gameOver = generateFeedback(goalCode, userInput);
            guessesLeft--;
            if (guessesLeft == 0){
                System.out.println("");
                System.out.println("Defeat!");
                System.out.println("");
                System.out.println("The goal was: ");
                printCharArray(goalCode);
                break;
            }
        }
        if (gameOver == true){
            System.out.println("");
            System.out.println("Victory!");
            System.out.println("");
            System.out.println("The goal was: ");
            printCharArray(goalCode);
        }
    }

    /**
     * Read in a character array and a string to generate the user feedback on their input
     * @param goalcode: the solution to the game for that session
     * @param userInput: the guess for the solution by the user
     */ 
    public static boolean generateFeedback(char[] goalCode, String userInput)
    {
        String[] feedback = new String[4];
        int counter = 0;
        boolean foundGoalCode = false;
        boolean inGoal = false;
        for (int i = 0; i < 4; i++){
            inGoal = false;
            for(int j = 0; j < 4; j++){
                if (userInput.charAt(i) == goalCode[j]){
                    feedback[i] = "o";
                    inGoal = true;
                }
                else if (inGoal == false){
                    feedback[i] = "";
                }
                if (userInput.charAt(i) == goalCode[i]) {
                    feedback[i] = "*";
                }
            }
        }
        for (int k = 0; k < 4; k++){
            if (feedback[k] == "*"){
                counter++;
            }
            if (counter == 4){
                foundGoalCode = true;
            }
        }
        System.out.println("Your feedback: ");
        printStringArray(feedback);
        return foundGoalCode;
    }

    /**
     * Displays the instructions of the game
     */
    public static void instructions()
    {
        System.out.println("Welcome to the game of Mastermind!");
        System.out.println("I will choose a secret code of four colours. ");
        System.out.println("The colours can be (R)ed, (O)range, (Y)ellow, (G)reen, (B)lue, or (P)urple ");
        System.out.println("You have 12 attempts to try to guess my code.");
        System.out.println("Enter your guess like this example: BYYG");
        System.out.println("After each guess, I will tell you how well you have done.");
        System.out.println("o means that you have guessed a correct colour in the wrong position.");
        System.out.println("* means that you have guessed a correct colour in the right position.");
    }

    /**
     * Generates a random code
     */
    public static char[] generateCode()
    {
        {
            char[] randomCode = new char[4];
            String availableLetters = "ROYGBP";
            for (int i = 0; i<4; i++){
                int randomChar = (int)(Math.random()*(5 - 0 + 1) + 0);
                randomCode[i] = availableLetters.charAt(randomChar);
            }
            return randomCode;

        }

    }

    /*
     * list the indices and values held in the given array
     * @param array: an array of integers
     */
    public static void printStringArray (String[] array)
    {
        for (int i = 0; i < array.length; i++)
        {
            if (array[i] == ""){
                System.out.print("");
            }
            else {
                System.out.print (array[i] + " ");
            }
        }
    } 

    /*
     * list the indices and values held in the given array
     * @param array: an array of integers
     */
    public static void printCharArray (char[] array)
    {
        for (int i = 0; i < array.length; i++)
        {
            System.out.print (array[i] + " ");
        }
    } 

    /**
     * Read in a string and check if the correct Characters are used
     * @param prompt: the prompt to show the user
     */ 
    public static String readInput(String prompt)
    {
        System.out.println (prompt);
        String input = " ";
        boolean correctInput = true;
        boolean validInput = false;
        while (correctInput = true) {
            Scanner scan = new Scanner(System.in);
            input = readString();
            for (int i = 0; i < input.length();i++){
                if (input.charAt(i) == 'R' ||input.charAt(i) == 'O' ||input.charAt(i) == 'Y' ||input.charAt(i) == 'G' ||input.charAt(i) == 'B' ||input.charAt(i) == 'P'){
                    validInput = true;
                }
            }
            if (validInput == true){ 
                break;
            }
            else if (validInput == false){
                System.out.println ("Enter ROYGBP only");
            }
        }
        return input;
    }

    /**
     * Read in a string and return if correct length
     */
    public static String readString()
    {
        boolean finishedInput = true;
        String inputString = " ";
        while (finishedInput = true)
        {
            Scanner scan = new Scanner(System.in);
            inputString = scan.nextLine(); 
            if (inputString.length() == 4){ //checks if the entered value is an integer
                break;
            }
            else {
                System.out.println ("Enter 4 letters");
            }
        }
        return inputString;
    }
} 

